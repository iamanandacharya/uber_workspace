{"version":3,"sources":["webpack:///./src/app/places/ride/ride.module.ts","webpack:///./src/app/places/ride/ride.page.html","webpack:///./src/app/places/ride/ride.page.scss","webpack:///./src/app/places/ride/ride.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEN;AACmB;AAC1D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAeF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAb1B,8DAAQ,CAAC;YACR,OAAO,EAAE,EAAE;YACX,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,eAAe,EAAE,EAAE;YACnB,YAAY,EAAE,CAAC,mDAAQ,CAAC;SAEzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;AC7B3B,0fAA0f,gBAAgB,mEAAmE,eAAe,iGAAiG,oBAAoB,uO;;;;;;;;;;;ACAjtB,+BAA+B,eAAe,gBAAgB,0BAA0B,EAAE,cAAc,kBAAkB,oBAAoB,sBAAsB,EAAE,UAAU,gBAAgB,iBAAiB,EAAE,kBAAkB,uBAAuB,EAAE,8BAA8B,yBAAyB,kBAAkB,mBAAmB,kBAAkB,eAAe,gBAAgB,yBAAyB,wBAAwB,EAAE,+CAA+C,mvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9Y;AACnC;AACoD;AAE9C;AAChB;AACF;AACtB;AACsC;AAEiB;AAE1B;AACkD;AAMzG;IAcE,kBACU,WAAwB,EACxB,cAA8B,EAC9B,SAA0B,EAC1B,IAAgB,EACjB,qBAA4C,EAC5C,SAA0B;QALzB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,SAAI,GAAJ,IAAI,CAAY;QACjB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,cAAS,GAAT,SAAS,CAAiB;QAhBzB,iBAAY,GAAG,IAAI,0DAAY,EAAiB,CAAC;QAE3D,cAAS,GAAG,KAAK,CAAC;QAgBhB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,2BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,4BAAS,GAAT;IAEA,CAAC;IACD,0BAAO,GAAP;QAAA,iBA8CC;QA7CC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YAC9C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACtC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACxC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YACrE,IAAI,UAAU,GAAG;gBACf,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;aACzC;YACD,IAAM,cAAc,GAAkB;gBACpC,GAAG,EAAE,KAAI,CAAC,SAAS;gBACnB,GAAG,EAAE,KAAI,CAAC,UAAU;gBACpB,OAAO,EAAE,IAAI;gBACb,iBAAiB,EAAE,IAAI;aACxB;YACD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,CAAC;iBAC7C,IAAI,CACH,gEAAS,CAAC,iBAAO;gBACf,cAAc,CAAC,OAAO,GAAG,OAAO,CAAC;gBACjC,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;gBAC9B,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;gBAC7B,OAAO,+CAAE,CACP,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CACtD;YACH,CAAC,CAAC,CACH;iBACA,SAAS,CAAC,2BAAiB;gBAC1B,cAAc,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;gBACrD,KAAI,CAAC,qBAAqB,GAAG,iBAAiB,CAAC;gBAC/C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACzC,CAAC,CAAC;YACJ,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YAE3D,KAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YAC1E,KAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE;gBAClC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC/C,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YACzE,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACb,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAS,GAAT;QAEE,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;YACrC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;SAC/B,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAE7B,CAAC;IACD,gCAAa,GAAb,UAAc,MAAM;QAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE;QAC/C,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,uCAAoB,GAApB,UAAqB,SAAS,EAAE,SAAS;QAAzC,iBA0BC;QAzBC,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC;QACnE,IAAI,OAAO,GAA0B;YACnC,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,CAAC;SACd,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC;aAC9D,IAAI,CAAC,UAAC,MAA8B;YACnC,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,eAAe,GAAG,EAAE,CAAC;YACzB,KAAyB,UAAyB,EAAzB,WAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAzB,cAAyB,EAAzB,IAAyB,EAAE;gBAA3C,eAAY,EAAX,WAAG,EAAE,aAAK;gBAClB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;oBAClB,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAE/B;YACD,eAAe,CAAC,OAAO,EAAE,CAAC;YAC1B,KAAkB,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;gBAA9B,IAAI,KAAK;gBACZ,KAAI,CAAC,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC;aAC9B;YACD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU;YAChB,KAAI,CAAC,OAAO,GAAG,wBAAwB,CAAC;QAC1C,CAAC,CAAC,CAAC;IAEP,CAAC;IACK,iCAAc,GAApB;;;;;;4BACsB,qBAAM,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;4BAC1D,MAAM,EAAE,QAAQ;4BAChB,OAAO,EAAE,CAAC;oCACR,IAAI,EAAE,iBAAiB;oCACvB,IAAI,EAAE,kBAAkB;oCACxB,OAAO,EAAE;wCAEP,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC;wCAChC,KAAI,CAAC,yBAAyB,EAAE,CAAC;oCACnC,CAAC;iCACF,EAAE;oCACD,IAAI,EAAE,sBAAsB;oCAC5B,IAAI,EAAE,kBAAkB;oCACxB,OAAO,EAAE;wCACP,KAAI,CAAC,oBAAoB,EAAE,CAAC;oCAC9B,CAAC;iCACF,CAAC;yBACH,CAAC;;wBAjBI,WAAW,GAAG,SAiBlB;wBACF,qBAAM,WAAW,CAAC,OAAO,EAAE;;wBAA3B,SAA2B,CAAC;;;;;KAE7B;IACK,4CAAyB,GAA/B;;;;;;4BACgB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,MAAM,EAAE,UAAU;4BAClB,OAAO,EAAE,+BAA+B;4BACxC,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,KAAK;oCACX,IAAI,EAAE,KAAK;oCACX,QAAQ,EAAE,WAAW;oCACrB,OAAO,EAAE,UAAC,IAAI;wCACZ,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;wCAChC,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oCAClC,CAAC;iCACF,EAAE;oCACD,IAAI,EAAE,IAAI;oCACV,OAAO,EAAE;wCACP,KAAI,CAAC,eAAe,EAAE,CAAC;oCACzB,CAAC;iCACF;6BACF;yBACF,CAAC;;wBAnBI,KAAK,GAAG,SAmBZ;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAED,kCAAe,GAAf;QAAA,iBA4CC;QA3CC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,8FAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAO;YAClE,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,mBAAS;gBACnC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;oBACnB,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;oBACjC,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,OAAO;iBACR;gBACD,IAAM,cAAc,GAAkB;oBACpC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG;oBACvB,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG;oBACvB,OAAO,EAAE,IAAI;oBACb,iBAAiB,EAAE,IAAI;iBACxB,CAAC;gBAEF,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBACtC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;qBACpD,IAAI,CACH,gEAAS,CAAC,iBAAO;oBACf,cAAc,CAAC,OAAO,GAAG,OAAO,CAAC;oBACjC,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC;oBAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC;oBAC7C,KAAI,CAAC,SAAS,GAAG,cAAc,CAAC,GAAG,CAAC;oBACpC,KAAI,CAAC,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC;oBACrC,OAAO,+CAAE,CACP,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CACtD,CAAC;gBACJ,CAAC,CAAC,CACH;qBACA,SAAS,CAAC,2BAAiB;oBAC1B,cAAc,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;oBACrD,KAAI,CAAC,qBAAqB,GAAG,iBAAiB,CAAC;oBAC/C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAoB,GAApB;QAAA,iBA6CC;QA3CC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,sHAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAO;YAC1E,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,mBAAS;gBACnC,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBACjC,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAE/B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;oBACnB,OAAO;iBACR;gBACD,IAAM,kBAAkB,GAAkB;oBACxC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG;oBACvB,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG;oBACvB,OAAO,EAAE,IAAI;oBACb,iBAAiB,EAAE,IAAI;iBACxB,CAAC;gBAEF,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBACtC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;qBACpD,IAAI,CACH,gEAAS,CAAC,iBAAO;oBACf,kBAAkB,CAAC,OAAO,GAAG,OAAO,CAAC;oBACrC,KAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;oBAClC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,kBAAkB,CAAC,CAAC;oBAClD,KAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,GAAG,CAAC;oBACxC,KAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,GAAG,CAAC;oBACzC,OAAO,+CAAE,CACP,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CACtD,CAAC;gBACJ,CAAC,CAAC,CACH;qBACA,SAAS,CAAC,2BAAiB;oBAC1B,kBAAkB,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;oBACzD,KAAI,CAAC,qBAAqB,GAAG,iBAAiB,CAAC;oBAC/C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mCAAgB,GAAhB,UAAiB,QAAuB;QACtC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;IACzC,CAAC;IACD,gCAAa,GAAb,UAAc,QAAuB;QACnC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,QAAQ,CAAC;IACzC,CAAC;IAEO,6BAAU,GAAlB,UAAmB,GAAW,EAAE,GAAW;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,8DAA4D,GAAG,SAAI,GAAG,aACtE,qEAAW,CAAC,gBACV,CACH;aACA,IAAI,CACH,0DAAG,CAAC,iBAAO;YACT,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChE,OAAO,IAAI,CAAC;aACb;YACD,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;QAC9C,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEO,8BAAW,GAAnB,UAAoB,GAAW,EAAE,GAAW,EAAE,IAAY;QACxD,OAAO,2DAAyD,GAAG,SAAI,GAAG,cAAS,IAAI,8EAClD,GAAG,SAAI,GAAG,mBACxC,qEAAW,CAAC,gBAAkB,CAAC;IACxC,CAAC;IA/RiB;QAAjB,+DAAS,CAAC,KAAK,CAAC;kCAAa,wDAAU;gDAAC;IAG/B;QAAT,4DAAM,EAAE;;kDAAkD;IAJhD,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,6FAA+B;;SAEhC,CAAC;yCAgBuB,yEAAW;YACR,gFAAc;YACnB,8DAAe;YACpB,+DAAU;YACM,oEAAqB;YACjC,8DAAe;OApBxB,QAAQ,CAiSpB;IAAD,eAAC;CAAA;AAjSoB","file":"ride-ride-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RidePage } from './ride.page';\nimport { SharedModule } from '../../shared/shared.module';\nconst routes: Routes = [\n  {\n    path: '',\n    component: RidePage\n  }\n];\n\n@NgModule({\n  exports: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  entryComponents: [],\n  declarations: [RidePage],\n\n})\nexport class RidePageModule {}\n","module.exports = \"\\n<ion-header>\\n  <ion-row>\\n    <ion-col text-start padding-top>\\n      <ion-title>Google Map</ion-title>\\n    </ion-col>\\n    <ion-col text-end>\\n      <ion-button (click)=\\\"loadMap()\\\" shape=\\\"round\\\" fill=\\\"outline\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"locate\\\"></ion-icon>\\n        Where I Am\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-header>\\n<ion-content>\\n <ion-item>\\n   <ion-text>\\n   Pickup Location: \\n   <ion-text *ngIf=\\\"fetchCurrentAddress\\\">\\n     {{currentAddress}} \\n    </ion-text> \\n    <ion-text *ngIf=\\\"fetchPickupAddress\\\"> {{pickupAddress}} </ion-text>\\n   </ion-text>\\n </ion-item>\\n <ion-item>\\n  <ion-text>\\n  destination Address:  {{destinationAddress}}\\n  </ion-text>\\n</ion-item>\\n  <div class=\\\"map-wrapper\\\">\\n    \\n    <div #map id=\\\"map\\\">\\n    </div>\\n   <ion-button expand=\\\"full\\\" (click)=\\\"onPickLocation()\\\">\\n     Start ride\\n   </ion-button>\\n  </div>\\n \\n</ion-content>\"","module.exports = \"#map_canvas {\\n  width: 90%;\\n  height: 80%;\\n  border: 1px solid red; }\\n\\n#address {\\n  padding: 10px;\\n  font-size: 18px;\\n  font-weight: bold; }\\n\\n#map {\\n  width: 100%;\\n  height: 70vh; }\\n\\n.map-wrapper {\\n  position: relative; }\\n\\n.map-wrapper #map_center {\\n    position: absolute;\\n    z-index: 99;\\n    height: 40px;\\n    width: 40px;\\n    top: 50%;\\n    left: 50%;\\n    margin-left: -21px;\\n    margin-top: -41px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9EZXNrdG9wL1BhcmVzaC9kZW1vLWxlYXJuL21hcHMtMDQtZmluaXNoZWQvc3JjL2FwcC9wbGFjZXMvcmlkZS9yaWRlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixXQUFXO0VBQ1gscUJBQXFCLEVBQUE7O0FBSXZCO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxXQUFXO0VBQ1gsWUFBWSxFQUFBOztBQUdkO0VBQ0Usa0JBQWtCLEVBQUE7O0FBRHBCO0lBSUksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osV0FBVztJQUNYLFFBQVE7SUFDUixTQUFTO0lBQ1Qsa0JBQWtCO0lBQ2xCLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGxhY2VzL3JpZGUvcmlkZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFwX2NhbnZhcyB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBoZWlnaHQ6IDgwJTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gIH1cbiAgIFxuICAgXG4gICNhZGRyZXNzIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICAgXG4gICNtYXAge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNzB2aDtcbiAgfVxuICAgXG4gIC5tYXAtd3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgXG4gICAgI21hcF9jZW50ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgei1pbmRleDogOTk7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICB3aWR0aDogNDBweDtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IC0yMXB4O1xuICAgICAgbWFyZ2luLXRvcDogLTQxcHg7XG4gICAgfVxuICB9Il19 */\"","import { Component, OnInit, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { PlaceLocation } from '../../places/location.model';\nimport { MapModalComponent } from 'src/app/shared/map-modal/map-modal.component';\ndeclare var google;\nimport { ActionSheetController } from '@ionic/angular';\nimport { DestinationModelComponent } from 'src/app/shared/destination-model/destination-model.component';\n@Component({\n  selector: 'app-ride',\n  templateUrl: './ride.page.html',\n  styleUrls: ['./ride.page.scss'],\n})\nexport class RidePage implements OnInit {\n  @ViewChild('map') mapElement: ElementRef;\n  map: any;\n  address: string;\n  @Output() locationPick = new EventEmitter<PlaceLocation>();\n  selectedLocationImage: string;\n  isLoading = false;\n  lattitude: any;\n  longtitude: any;\n  currentAddress: any;\n  pickupAddress: any;\n  fetchCurrentAddress: boolean;\n  fetchPickupAddress: boolean;\n  destinationAddress: any;\n  constructor(\n    private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder,\n    private modalCtrl: ModalController,\n    private http: HttpClient,\n    public actionSheetController: ActionSheetController,\n    public alertCtrl: AlertController\n  ) {\n    this.fetchCurrentAddress = false;\n    this.fetchPickupAddress = false;\n  }\n\n  ngOnInit() {\n    this.loadMap();\n  }\n  startRide() {\n\n  }\n  loadMap() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.lattitude = resp.coords.latitude;\n      this.longtitude = resp.coords.longitude;\n      let latLng = new google.maps.LatLng(this.lattitude, this.longtitude);\n      let mapOptions = {\n        center: latLng,\n        zoom: 15,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      }\n      const currentAddress: PlaceLocation = {\n        lat: this.lattitude,\n        lng: this.longtitude,\n        address: null,\n        staticMapImageUrl: null\n      }\n      this.isLoading = true;\n      this.getAddress(this.lattitude, this.longtitude)\n        .pipe(\n          switchMap(address => {\n            currentAddress.address = address;\n            this.currentAddress = address;\n            this.destinationAddress = '';\n            return of(\n              this.getMapImage(this.lattitude, this.longtitude, 14)\n            )\n          })\n        )\n        .subscribe(staticMapImageUrl => {\n          currentAddress.staticMapImageUrl = staticMapImageUrl;\n          this.selectedLocationImage = staticMapImageUrl;\n          this.isLoading = false;\n          this.locationPick.emit(currentAddress);\n        })\n      this.getAddressFromCoords(this.lattitude, this.longtitude);\n\n      this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n      this.addMarker();\n      this.map.addListener('tilesloaded', () => {\n        console.log('accuracy', this.map.center.lat());\n        this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n      });\n\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n  }\n\n  addMarker() {\n\n    let marker = new google.maps.Marker({\n      map: this.map,\n      animation: google.maps.Animation.DROP,\n      position: this.map.getCenter()\n    });\n    this.addInfoWindow(marker);\n\n  }\n  addInfoWindow(marker) {\n    google.maps.event.addListener(marker, 'click', () => {\n    });\n\n  }\n  getAddressFromCoords(lattitude, longitude) {\n    console.log(\"getAddressFromCoords \" + lattitude + \" \" + longitude);\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n\n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        this.address = \"\";\n        let responseAddress = [];\n        for (let [key, value] of Object.entries(result[0])) {\n          if (value.length > 0)\n            responseAddress.push(value);\n\n        }\n        responseAddress.reverse();\n        for (let value of responseAddress) {\n          this.address += value + \", \";\n        }\n        this.address = this.address.slice(0, -2);\n      })\n      .catch((error: any) => {\n        this.address = \"Address Not Available!\";\n      });\n\n  }\n  async onPickLocation() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Albums',\n      buttons: [{\n        text: 'Pickup Location',\n        icon: 'radio-button-off',\n        handler: () => {\n\n          console.log(this.currentAddress)\n          this.presentPickupAlertConfirm();\n        }\n      }, {\n        text: 'Destination Location',\n        icon: 'radio-button-off',\n        handler: () => {\n          this.callDestinationModel();\n        }\n      }]\n    });\n    await actionSheet.present();\n\n  }\n  async presentPickupAlertConfirm() {\n    const alert = await this.alertCtrl.create({\n      header: 'Confirm!',\n      message: 'Are you get current Location?',\n      buttons: [\n        {\n          text: 'Yes',\n          role: 'Yes',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            this.fetchCurrentAddress = true;\n            this.fetchPickupAddress = false;\n          }\n        }, {\n          text: 'No',\n          handler: () => {\n            this.callPickupModal();\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  callPickupModal() {\n    this.fetchCurrentAddress = false;\n    this.fetchPickupAddress = true;\n    this.modalCtrl.create({ component: MapModalComponent }).then(modalEl => {\n      modalEl.onDidDismiss().then(modalData => {\n        if (!modalData.data) {\n          this.fetchCurrentAddress = false;\n          this.fetchPickupAddress = false;\n          return;\n        }\n        const pickedLocation: PlaceLocation = {\n          lat: modalData.data.lat,\n          lng: modalData.data.lng,\n          address: null,\n          staticMapImageUrl: null\n        };\n\n        this.lattitude = modalData.data.lat;\n        this.longtitude = modalData.data.lng;\n        console.log('lat ' + this.lattitude);\n        console.log('lng ' + this.longtitude);\n        this.isLoading = true;\n        this.getAddress(modalData.data.lat, modalData.data.lng)\n          .pipe(\n            switchMap(address => {\n              pickedLocation.address = address;\n              this.pickupAddress = address;\n              console.log('address ' + this.pickupAddress);\n              this.lattitude = pickedLocation.lat;\n              this.longtitude = pickedLocation.lng;\n              return of(\n                this.getMapImage(this.lattitude, this.longtitude, 14)\n              );\n            })\n          )\n          .subscribe(staticMapImageUrl => {\n            pickedLocation.staticMapImageUrl = staticMapImageUrl;\n            this.selectedLocationImage = staticMapImageUrl;\n            this.isLoading = false;\n            this.locationPick.emit(pickedLocation);\n          });\n      });\n      modalEl.present();\n    });\n  }\n  callDestinationModel() {\n\n    this.modalCtrl.create({ component: DestinationModelComponent }).then(modalEl => {\n      modalEl.onDidDismiss().then(modalData => {\n        this.fetchCurrentAddress = false;\n        this.fetchPickupAddress = true;\n\n        this.currentAddress = '';\n        if (!modalData.data) {\n          return;\n        }\n        const destinationAddress: PlaceLocation = {\n          lat: modalData.data.lat,\n          lng: modalData.data.lng,\n          address: null,\n          staticMapImageUrl: null\n        };\n\n        this.lattitude = modalData.data.lat;\n        this.longtitude = modalData.data.lng;\n        console.log('lat ' + this.lattitude);\n        console.log('lng ' + this.longtitude);\n        this.isLoading = true;\n        this.getAddress(modalData.data.lat, modalData.data.lng)\n          .pipe(\n            switchMap(address => {\n              destinationAddress.address = address;\n              this.destinationAddress = address;\n              console.log('address ' + this.destinationAddress);\n              this.lattitude = destinationAddress.lat;\n              this.longtitude = destinationAddress.lng;\n              return of(\n                this.getMapImage(this.lattitude, this.longtitude, 14)\n              );\n            })\n          )\n          .subscribe(staticMapImageUrl => {\n            destinationAddress.staticMapImageUrl = staticMapImageUrl;\n            this.selectedLocationImage = staticMapImageUrl;\n            this.isLoading = false;\n            this.locationPick.emit(destinationAddress);\n          });\n      });\n      modalEl.present();\n    });\n  }\n  onLocationPicked(location: PlaceLocation) {\n    console.log('location lat' + location);\n  }\n  onLocationSet(location: PlaceLocation) {\n    console.log('location dest' + location)\n  }\n\n  private getAddress(lat: number, lng: number) {\n    return this.http\n      .get<any>(\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${\n        environment.googleMapsAPIKey\n        }`\n      )\n      .pipe(\n        map(geoData => {\n          if (!geoData || !geoData.results || geoData.results.length === 0) {\n            return null;\n          }\n          return geoData.results[0].formatted_address;\n        })\n      );\n  }\n\n  private getMapImage(lat: number, lng: number, zoom: number) {\n    return `https://maps.googleapis.com/maps/api/staticmap?center=${lat},${lng}&zoom=${zoom}&size=500x300&maptype=roadmap\n    &markers=color:red%7Clabel:Place%7C${lat},${lng}\n    &key=${environment.googleMapsAPIKey}`;\n  }\n}\n"],"sourceRoot":""}